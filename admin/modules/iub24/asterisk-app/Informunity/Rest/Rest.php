<?php
 namespace Informunity\Rest; use Exception; use Informunity\Astman\CheckAstDB; use Informunity\Log; use Informunity\ModuleStaticConfig; class Rest { public $queryStart; public $config; protected $data; protected $token; private $Log; private $checkConnection = 1; private $currentTimeout; public function __construct($config, $data = array()) { goto k9GrX; k9GrX: $this->setStartQuery(); goto cM3tU; tZiED: $this->data = $data; goto oEIMF; IMZck: $callID = empty($config["\x61\x73\x74\x65\162\151\163\x6b\137\x63\141\x6c\154\x69\x64"]) ? "\x5b\x49\x6e\x74\145\162\146\x61\143\145\x5d" : $config["\x61\x73\x74\145\x72\x69\x73\153\137\x63\x61\x6c\154\x69\144"]; goto eZTXC; oEIMF: $this->currentTimeout = $this->config["\x74\x69\x6d\145\x6f\165\x74"]; goto IMZck; eZTXC: $this->Log = new Log(array("\150\145\x61\x64\x65\x72" => "\124\x6f\x20\102\151\164\x72\x69\170\62\64", "\x61\163\164\x65\162\x69\x73\153\x5f\x63\141\x6c\x6c\151\x64" => $callID), $config["\x6c\157\x67\147\x69\156\x67"]); goto mSnD9; cM3tU: $this->config = $config; goto tZiED; mSnD9: } function __destruct() { return false; } private function checkConnectToken() { $this->checkConnection++; } private function getTokenAttempt() { goto gbZqj; GLrsH: $this->currentTimeout = $this->currentTimeout - $ts; goto c5Uko; gbZqj: $date = new \DateTime(); goto juAtH; c5Uko: if (!($ts > $this->currentTimeout)) { goto CQq0s; } goto ebEtB; ebEtB: return false; goto iIwF2; iIwF2: CQq0s: goto RfCYM; RfCYM: return true; goto VXY3I; juAtH: $ts = $date->getTimestamp() - $this->queryStart; goto GLrsH; VXY3I: } private function endRest() { goto fisr5; fisr5: $date = new \DateTime(); goto VdGLO; AGCf1: if (!($ts > $this->currentTimeout)) { goto NMEKJ; } goto rEAIQ; Xvem1: return true; goto R0fRT; APJ7D: NMEKJ: goto Xvem1; rEAIQ: return false; goto APJ7D; VdGLO: $ts = $date->getTimestamp() - $this->queryStart; goto AGCf1; R0fRT: } protected function query($method, $fields = array(), $skipTimeout = false) { goto qI3ge; h8MLg: diZvX: goto FmlNI; s3pE4: $optarray_log = $fields; goto mrT9n; qI3ge: if ($this->endRest()) { goto Nfzly; } goto Pwq7J; tR4Rk: if (!file_exists($this->config["\x63\x6f\x6e\146\x5f\x64\x69\x72"] . "\x64\145\x62\165\147")) { goto FdSsn; } goto Gtbdw; w1wE8: $curl = curl_init(); goto zzshg; OtRQJ: LgIz2: goto ymba4; Mv_Gf: $result = curl_exec($curl); goto tR4Rk; n6bSJ: curl_close($curl); goto QgV3R; CkmqJ: FdSsn: goto n6bSJ; V1FZm: U70tj: goto bMDDC; j58pN: goto LgIz2; goto PnM3y; bMDDC: $this->currentTimeout = 180; goto u5Vt0; DTogY: if ($skipTimeout) { goto U70tj; } goto UuaCS; WuOID: return false; goto YptFF; zzshg: $optarray = array(CURLOPT_FOLLOWLOCATION => true, CURLOPT_CUSTOMREQUEST => "\120\x4f\123\x54", CURLOPT_POSTREDIR => 3, CURLOPT_VERBOSE => false, CURLOPT_SSL_VERIFYPEER => false, CURLOPT_HEADER => false, CURLOPT_RETURNTRANSFER => true, CURLOPT_POST => true, CURLOPT_URL => $url, CURLOPT_POSTFIELDS => $postFields); goto DTogY; U1QG0: $this->config["\x65\170\160\151\162\x65\x73"] = 0; goto VAMpA; UbieM: $result = $this->query($method, $fields); goto h8MLg; WghJv: if (!(isset($result["\145\162\162\157\x72"]) && ($result["\145\162\162\157\162"] == "\x4e\117\x5f\101\x55\124\x48\137\106\x4f\x55\116\104" || $result["\145\x72\x72\157\x72"] == "\151\x6e\x76\x61\154\151\x64\x5f\x74\157\153\x65\x6e" || $result["\145\162\x72\x6f\x72"] == "\145\x78\160\151\x72\145\x64\137\164\157\x6b\x65\156"))) { goto xNttL; } goto U1QG0; llka0: file_put_contents($this->config["\x63\157\x6e\146\x5f\x64\x69\162"] . "\144\145\142\x75\x67", $result . "\12", 8); goto CkmqJ; PnM3y: Nfzly: goto ezXju; gks8t: $execMethod = Methods::load($this->config)->Get($method); goto EWJ5C; YD3gx: hjoIv: goto pozc_; pozc_: goto GMwpF; goto V1FZm; u5Vt0: GMwpF: goto xE8bm; EWJ5C: $url = $this->config["\x63\154\151\145\156\x74\137\x73\145\162\166\145\x72"] . "\x2f\162\145\163\164\57" . $execMethod; goto eI_Ku; eI_Ku: $postFields = http_build_query($fields); goto w1wE8; Oqxub: $this->Log->toFile(array("\122\x65\x71\165\145\163\164" => $execMethod, $optarray_log)); goto Mv_Gf; QgV3R: $result = json_decode($result, true); goto svzWa; eP0va: q68oF: goto UbieM; FmlNI: xNttL: goto AvEmM; svzWa: $this->Log->toFile(array("\x52\x65\x73\x70\x6f\x6e\163\145" => $execMethod, json_last_error() === JSON_ERROR_NONE ? $result : array("\105\122\122\117\122" => serialize($result)))); goto WghJv; ezXju: $this->token = encrypt_decrypt("\144\x65\143\162\171\160\x74", $this->getToken()); goto OtRQJ; ymba4: $fields["\x61\165\164\150"] = $this->token; goto s3pE4; Gtbdw: var_dump($result); goto llka0; YptFF: goto diZvX; goto eP0va; mrT9n: unset($optarray_log["\x46\111\114\105\x5f\x43\117\116\124\x45\116\x54"], $optarray_log["\x46\111\114\105"], $optarray_log["\141\x75\x74\x68"], $optarray_log["\x74\157\153\x65\x6e"]); goto gks8t; AvEmM: return $result; goto WNBQU; UuaCS: switch ($method) { case "\164\x61\x73\x6b\x2e\151\x74\145\155\x2e\x61\x64\x64\x66\151\154\x65": case "\143\162\x6d\56\x61\143\x74\151\166\151\164\171\56\165\160\144\141\x74\x65": case "\164\145\x6c\145\x70\x68\157\x6e\171\56\145\170\164\145\162\156\x61\154\103\141\x6c\x6c\56\x61\x74\164\141\x63\x68\122\x65\x63\x6f\162\144": goto hjoIv; default: goto mZ0X6; lkpMI: goto hjoIv; goto ZzxoW; sRGt7: $optarray[CURLOPT_TIMEOUT] = $this->currentTimeout; goto lkpMI; mZ0X6: $optarray[CURLOPT_CONNECTTIMEOUT] = $this->currentTimeout; goto sRGt7; ZzxoW: } goto O1b7q; O1b7q: MSA6d: goto YD3gx; xE8bm: curl_setopt_array($curl, $optarray); goto Oqxub; VAMpA: if ($this->getTokenAttempt()) { goto q68oF; } goto WuOID; Pwq7J: return false; goto j58pN; WNBQU: } private function getToken() { goto lniDX; pRK3V: $this->config["\x74\x6f\x6b\x65\x6e"] = filter_var($result["\x61\143\x63\145\163\x73\137\164\x6f\x6b\x65\x6e"], FILTER_SANITIZE_URL); goto wLpJO; Z9Jot: if (!empty($this->config["\x74\x6f\153\145\156"])) { goto Z94RV; } goto yAv3b; OuPmb: $db->query("\x55\x50\x44\101\124\105\40\141\x73\x74\145\x72\151\x73\153\x2e\x69\165\x62\62\x34\40\x53\105\124\40" . implode("\x2c", $q_array) . "\40\x57\x48\x45\x52\105\x20\x69\x64\x3d\x27\x30\x27"); goto LS9ca; JOr8b: if (!($expires - time() < 5 * 60 && !empty($this->config["\162\x65\x66\162\x65\x73\x68\x5f\x74\x6f\153\145\x6e"]))) { goto DiI9a; } goto AruCx; AruCx: try { goto QUjy6; BU_Dd: $fields = array("\x72\145\146\x72\145\163\x68\137\164\157\153\x65\x6e" => "\162\x65\146\x72\145\x73\x68\137\164\157\x6b\145\156", "\155\145\x6d\142\x65\x72\x5f\x69\x64" => "\x6d\x65\x6d\x62\x65\162\x5f\151\144", "\160\142\170\x5f\166\x65\x72\163\151\157\156" => "\x76\x65\x72\163\151\x6f\x6e"); goto WSK_x; WSK_x: $result = $this->config["\x4c\x69\143\145\x6e\x73\145"]->Request($moduleConfig["\154\151\x63\145\156\x73\145"]["\163\145\x72\x76\145\162"] . $moduleConfig["\x6c\x69\143\145\x6e\x73\x65"]["\x72\x6f\165\164\x65"]["\x75\x70\144\141\x74\x65\137\x74\157\x6b\x65\x6e"], '', $fields); goto zTih5; zTih5: CheckAstDB::Run(); goto F61xZ; QUjy6: $moduleConfig = ModuleStaticConfig::load()->get(); goto BU_Dd; F61xZ: } catch (Exception $e) { $this->checkConnectToken(); return false; } goto NCYkM; F82OA: return $token; goto aFWil; wLpJO: $q_array = array("\x74\x6f\x6b\145\x6e" => "\x74\x6f\x6b\145\156\x3d\x27" . filter_var($result["\141\x63\143\x65\x73\x73\x5f\164\157\153\145\156"], FILTER_SANITIZE_URL) . "\x27", "\162\145\146\x72\145\163\150\137\164\x6f\x6b\x65\156" => "\162\x65\x66\x72\145\163\x68\x5f\164\x6f\x6b\145\x6e\x3d\47" . filter_var($result["\162\145\146\x72\x65\163\150\137\x74\157\153\145\x6e"], FILTER_SANITIZE_URL) . "\x27", "\x65\x78\x70\x69\x72\x65\x73" => "\x65\x78\x70\x69\162\x65\x73\x3d\x27" . filter_var($result["\145\170\160\x69\x72\x65\163"], FILTER_SANITIZE_URL) . "\47", "\x6d\x65\x6d\142\x65\162\137\x69\x64" => "\x6d\145\155\x62\145\162\x5f\151\144\x3d\47" . filter_var($result["\x6d\x65\155\x62\x65\162\137\x69\x64"], FILTER_SANITIZE_URL) . "\47"); goto iF3JH; NCYkM: if (!(!empty($result["\x61\x63\143\x65\163\163\x5f\x74\157\x6b\x65\156"]) && !empty($result["\162\145\146\162\x65\163\150\x5f\x74\x6f\153\x65\x6e"]) && !empty($result["\x65\x78\160\x69\x72\145\x73"]))) { goto veIY0; } goto pRK3V; tc_Xq: $token = $this->config["\x74\x6f\153\145\156"]; goto Z9Jot; lniDX: $token = null; goto Gyoj3; XdXo1: DiI9a: goto tc_Xq; iF3JH: global $db; goto OuPmb; LS9ca: veIY0: goto XdXo1; yAv3b: return false; goto LXn1V; Gyoj3: $expires = $this->config["\145\170\160\151\x72\145\163"]; goto JOr8b; LXn1V: Z94RV: goto F82OA; aFWil: } public function setStartQuery() { $date = new \DateTime(); $this->queryStart = $date->getTimestamp(); } }
