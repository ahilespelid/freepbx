<?php
 namespace Informunity; class License { public $Log; private $config = array(); private $optarray = array(CURLOPT_VERBOSE => false, CURLOPT_SSL_VERIFYPEER => false, CURLOPT_HEADER => false, CURLOPT_RETURNTRANSFER => true, CURLOPT_POST => true); public $error = false; public function setData($fields) { goto oyVrX; UGSCc: nfrHn: goto oD280; INZYO: $this->Log = new Log(array("\150\x65\x61\x64\145\x72" => "\x54\x6f\x20\x4c\x69\x63\x65\x6e\163\x65\40\x53\x65\x72\166\145\162", "\x61\x73\164\x65\x72\151\x73\x6b\137\x63\x61\154\x6c\151\144" => $astCallID), $this->config["\154\157\147\147\151\x6e\x67"]); goto ZvTGF; A230p: $astCallID = $config["\x61\x73\x74\145\x72\x69\163\153\x5f\143\141\154\x6c\151\144"]; goto UGSCc; oD280: $this->config = array_merge($this->config, $fields); goto INZYO; oyVrX: $astCallID = "\133\x49\156\164\145\162\x66\x61\143\145\135"; goto zRc4q; zRc4q: if (!isset($config["\x61\x73\164\145\x72\x69\163\153\x5f\143\x61\154\x6c\x69\144"])) { goto nfrHn; } goto A230p; ZvTGF: } public function Request($url, $request, $fields) { goto VQiAu; i6a7b: BGlIk: goto VN5qb; AiKNG: foreach ($fields as $key => $value) { goto wlTIt; J_Fke: Sf4vl: goto LVIbC; LVIbC: v9Qof: goto ERHX0; wlTIt: switch ($value) { case "\x63\154\151\145\x6e\x74\x5f\163\x65\x72\x76\145\162": case "\145\x78\164\x5f\x61\144\x64\x72\x65\x73\x73": goto LjDxG; LjDxG: $url1 = parse_url($this->config[$value]); goto UNNwV; mNMFf: goto Sf4vl; goto FeD5N; UNNwV: $port = empty($url1["\160\x6f\162\164"]) ? $url1["\163\143\x68\x65\155\x65"] == "\150\x74\x74\160\x73" ? 443 : 80 : $url1["\x70\x6f\x72\164"]; goto FGeAv; FGeAv: $currentFields[$key] = empty($url1["\x70\x6f\162\x74"]) ? $this->config[$value] . "\x3a" . $port : $this->config[$value]; goto mNMFf; FeD5N: default: $currentFields[$key] = $this->config[$value]; goto Sf4vl; } goto lRKgd; lRKgd: dhgPc: goto J_Fke; ERHX0: } goto i6a7b; XJUcm: $this->optarray[CURLOPT_HTTPHEADER] = array("\103\157\x6e\x74\x65\156\x74\x2d\x54\171\160\x65\72\141\x70\160\154\x69\143\141\x74\151\x6f\x6e\x2f\x6a\x73\157\156", "\x43\157\x6e\164\x65\x6e\164\x2d\x4c\x65\156\x67\164\150\72\40" . strlen($postFields)); goto aQcTH; hwcbh: $this->optarray[CURLOPT_CONNECTTIMEOUT] = $this->config["\x74\x69\155\145\157\x75\x74"] * 2; goto KLq7U; vnRZr: $this->optarray[CURLOPT_POSTFIELDS] = $postFields; goto hwcbh; t1Bm3: if (!(!empty($fields) && is_array($fields))) { goto McyuX; } goto AiKNG; O9mJb: $postFields = json_encode($currentFields); goto XJUcm; VN5qb: McyuX: goto O9mJb; KLq7U: $this->optarray[CURLOPT_TIMEOUT] = $this->config["\x74\x69\155\145\157\165\x74"] * 2; goto FAn34; aQcTH: $this->optarray[CURLOPT_URL] = $url; goto vnRZr; FAn34: return $this->query(); goto s04lC; VQiAu: $currentFields = array("\x64\x74\x5f\x73\151\144\145" => "\x32", "\x64\164\137\164\171\x70\145" => "\x72\x65\161\x75\x65\163\164", "\x64\x74\137\x72\x65\x71\x75\145\x73\x74" => $request); goto t1Bm3; s04lC: } private function query() { goto LKoni; Ocnh2: vYEpt: goto etFVk; Ve95q: $curl = curl_init(); goto YRCKZ; YRCKZ: $this->Log->toFile(array("\122\x65\x71\165\x65\163\164\x2d\x4c\151\143\145\156\163\145" => $this->optarray)); goto iQXjE; PSfb1: try { goto Cs9GL; u25RL: $this->Log->toFile(array("\x52\145\163\160\157\x6e\x73\145\x2d\114\x69\x63\x65\156\x73\145" => $result)); goto eF_ha; sMAgi: $result = json_decode($result, true); goto OrJYL; IzGJA: return $result; goto adIQP; U2sTU: $this->error = true; goto amGTE; OrJYL: if (!empty($result)) { goto J6bK7; } goto U2sTU; Cs9GL: $result = curl_exec($curl); goto u25RL; eF_ha: curl_close($curl); goto sMAgi; amGTE: return false; goto xd8WT; xd8WT: J6bK7: goto IzGJA; adIQP: } catch (\Exception $err) { goto nNYrB; nNYrB: unset($err); goto sIkFR; sIkFR: curl_close($curl); goto RPLht; RPLht: $this->error = true; goto EYITA; EYITA: return false; goto pweud; pweud: } goto Ocnh2; iQXjE: curl_setopt_array($curl, $this->optarray); goto PSfb1; LKoni: if ($this->error) { goto vYEpt; } goto Ve95q; etFVk: return false; goto sFQ3P; sFQ3P: } }
